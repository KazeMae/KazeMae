{"title":"如何优雅地用 Sublime Text 刷题（C/C++）","uid":"0fe35e38e770f16f9b8cdba4cf1ece54","slug":"如何优雅地用-Sublime-Text-刷题（C-C","date":"2024-01-08T13:04:24.000Z","updated":"2024-01-22T06:47:09.000Z","comments":true,"path":"api/articles/如何优雅地用-Sublime-Text-刷题（C-C.json","keywords":null,"cover":"https://cdn.luogu.com.cn/upload/image_hosting/eqbjc9m9.png","content":"<p>LastEditTime: 2023-07-08 12:31:02</p>\n<p><em>基本都是抄来改的，就当图个备份。(bushi)</em></p>\n<h2 id=\"0x01下载-Sublime-Text\"><a href=\"#0x01下载-Sublime-Text\" class=\"headerlink\" title=\"0x01下载 Sublime Text\"></a>0x01下载 Sublime Text</h2><p><a href=\"https://www.sublimetext.com/\">Sublime Text 官网</a></p>\n<h2 id=\"0x02-安装MinGW编译器\"><a href=\"#0x02-安装MinGW编译器\" class=\"headerlink\" title=\"0x02 安装MinGW编译器\"></a>0x02 安装MinGW编译器</h2><p>我们选择 mingw64。<strong>注意安装的路径不能包含中文、空格以及其他非ASCII字符！！！</strong></p>\n<p>我使用小熊猫DevC++自带的MinGw。</p>\n<h2 id=\"0x03-设置环境变量\"><a href=\"#0x03-设置环境变量\" class=\"headerlink\" title=\"0x03 设置环境变量\"></a>0x03 设置环境变量</h2><p>任务栏搜索 &#x3D;&#x3D;高级系统设置&#x3D;&#x3D; ，选择&#x3D;&#x3D;用户的环境变量&#x3D;&#x3D;，双击&#x3D;&#x3D;Path变量&#x3D;&#x3D;，点击&#x3D;&#x3D;新建&#x3D;&#x3D;，输入 <strong>mingw64的路径\\bin</strong> 。</p>\n<h3 id=\"检验是否设置成功\"><a href=\"#检验是否设置成功\" class=\"headerlink\" title=\"检验是否设置成功\"></a>检验是否设置成功</h3><p>win+R打开运行，输入 cmd 运行。输入 gcc、g++ 查看是否配置成功。</p>\n<h2 id=\"0x04-配置-Sublime-Text\"><a href=\"#0x04-配置-Sublime-Text\" class=\"headerlink\" title=\"0x04 配置 Sublime Text\"></a>0x04 配置 Sublime Text</h2><h3 id=\"汉化及插件安装方法\"><a href=\"#汉化及插件安装方法\" class=\"headerlink\" title=\"汉化及插件安装方法\"></a>汉化及插件安装方法</h3><p><strong>插件管理系统</strong></p>\n<ol>\n<li><p><code>Ctrl+Shift+P</code>打开sublime的<strong>命令面板</strong>。</p>\n</li>\n<li><p>输入 <code>install package control</code> 回车进行安装。</p>\n</li>\n<li><p>等待左下角的等号跑完</p>\n</li>\n<li><p>这是安装好了插件管理系统</p>\n</li>\n</ol>\n<p><strong>汉化</strong></p>\n<ol>\n<li><p><code>Ctrl+Shift+P</code>打开sublime的<strong>命令面板</strong>。</p>\n</li>\n<li><p>输入 <code>pcip</code> 打开回车，打开插件安装界面。</p>\n</li>\n<li><p>输入 <code>chinese</code> 安装中文插件</p>\n</li>\n</ol>\n<h3 id=\"个性化配置\"><a href=\"#个性化配置\" class=\"headerlink\" title=\"个性化配置\"></a>个性化配置</h3><p>这里我以我的需求为例，我想要在某个文件夹下面创建很多个xxx.cpp文件（一看就是刷题狗呢）然后可以一键编译运行，产生的编译文件（xxx.exe）不会污染原目录下的cpp文件。并且可以知道程序运行时间。</p>\n<p>首先我想形成这样一个目录结构：</p>\n<pre><code class=\"highlight plaintext\">MyProject  \n|  \n|____code  \n|   |___test1.cpp  \n|   |___test2.cpp  \n|   |___test.c  \n|   |___test.py  \n|  \n|____bin  \n|   |___test.exe  \n|   |___test1.exe  \n|   |___test2.exe  \n|  \n|____data  \n    |___in.txt  \n    |___out.txt</code></pre>\n\n<ol>\n<li><p>先把上面的文件夹和 <strong>in&#x2F;out.txt</strong> 文件创建好</p>\n</li>\n<li><p>先把MyProject（名字随便取）拖到sublime里面去。</p>\n</li>\n<li><p>再在code里面随便写一个test.cpp</p>\n</li>\n<li><p>工具 -&gt; 编译系统 -&gt; 新建编译系统，将下面的代码复制过去，保存。</p>\n<pre><code class=\"highlight json\"><span class=\"punctuation\">&#123;</span>  \n    <span class=\"comment\">// 写上你自己的 MinGW 地址  </span>\n    <span class=\"attr\">&quot;path&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;D:/Code/RedPanda-Cpp/MinGW64/bin&quot;</span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// build only  </span>\n    <span class=\"attr\">&quot;shell_cmd&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;g++ -std=c++2a -g -Wall -o2 \\&quot;$&#123;file&#125;\\&quot; -o \\&quot;$&#123;file_path&#125;/../bin/$&#123;file_base_name&#125;\\&quot;&quot;</span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// check the file name using regex  </span>\n    <span class=\"attr\">&quot;file_regex&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$&quot;</span><span class=\"punctuation\">,</span>  \n    <span class=\"attr\">&quot;encoding&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;GBK&quot;</span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// doesn&#x27;t matter if I use full path  </span>\n    <span class=\"attr\">&quot;working_dir&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;$&#123;file_path&#125;&quot;</span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// only C and Cpp files can use this sublime-build file  </span>\n    <span class=\"attr\">&quot;selector&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;source.c, source.c++&quot;</span><span class=\"punctuation\">,</span>  \n   \n    <span class=\"attr\">&quot;variants&quot;</span><span class=\"punctuation\">:</span>  \n    <span class=\"punctuation\">[</span>  \n        <span class=\"punctuation\">&#123;</span>  \n            <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Run&quot;</span><span class=\"punctuation\">,</span>  \n            <span class=\"attr\">&quot;shell_cmd&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;g++ -std=c++2a -g -Wall -o2 \\&quot;$&#123;file&#125;\\&quot; -o \\&quot;$&#123;file_path&#125;/../bin/$&#123;file_base_name&#125;\\&quot; &amp;&amp; $&#123;file_path&#125;/../bin/timer \\&quot;$&#123;file_path&#125;/../bin/$&#123;file_base_name&#125;\\&quot; &lt; $&#123;file_path&#125;/../data/in.txt &gt; $&#123;file_path&#125;/../data/out.txt&quot;</span>  \n        <span class=\"punctuation\">&#125;</span>  \n    <span class=\"punctuation\">]</span>  \n<span class=\"punctuation\">&#125;</span></code></pre></li>\n<li><p>将下面的代码编译，将生成的<code>.exe</code>文件重命名为 <code>timer.exe</code>，放入 MyProject&#x2F;bin 文件夹</p>\n<pre><code class=\"highlight c++\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cstdio&gt;</span>  </span>\n<span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cstdlib&gt;</span>  </span>\n<span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;ctime&gt;</span>  </span>\n<span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;windows.h&gt;</span>  </span>\n<span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;  \n   \n<span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span>** argv)</span>  </span>\n<span class=\"function\"></span>&#123;  \n    <span class=\"type\">clock_t</span> begin = <span class=\"built_in\">clock</span>();  \n    <span class=\"built_in\">system</span>(argv[<span class=\"number\">1</span>]);  \n    <span class=\"type\">double</span> used = <span class=\"number\">1000.0</span> * <span class=\"built_in\">double</span>(<span class=\"built_in\">clock</span>() - begin) / CLOCKS_PER_SEC - <span class=\"number\">200.0</span>;  \n    <span class=\"keyword\">if</span> (used &lt; <span class=\"number\">0</span>) used = <span class=\"number\">0.0</span>;  \n    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n\\n------------------------------\\n&quot;</span>);  \n    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Time used: %.2lf ms.\\n&quot;</span>, used);  \n    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  \n&#125;</code></pre></li>\n</ol>\n<p>现在在code.cpp中写入程序，编译时选择刚刚新建的编译系统，之后直接Ctrl+B即可。窗口布局也可调整如下更方便。<br>![[image-20230708131218280.png]]</p>\n<h3 id=\"sublime偏好设置\"><a href=\"#sublime偏好设置\" class=\"headerlink\" title=\"sublime偏好设置\"></a>sublime偏好设置</h3><p>将下面的代码复制到 <code>Preferences-&gt;Settings</code>。</p>\n<pre><code class=\"highlight json\"><span class=\"punctuation\">&#123;</span>  \n    <span class=\"attr\">&quot;font_size&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">14</span><span class=\"punctuation\">,</span>  \n    <span class=\"attr\">&quot;ignored_packages&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>  \n        <span class=\"string\">&quot;Vintage&quot;</span><span class=\"punctuation\">,</span>  \n    <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// 设置tab的大小为4  </span>\n    <span class=\"attr\">&quot;tab_size&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">4</span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// 使用空格代替 Tab  </span>\n    <span class=\"attr\">&quot;translate_tabs_to_spaces&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// 使用默认字体 Monaco  </span>\n    <span class=\"attr\">&quot;font_face&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Monaco&quot;</span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// 失去光标自动保存  </span>\n    <span class=\"attr\">&quot;save_on_focus_lost&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// 添加行宽标尺  </span>\n    <span class=\"attr\">&quot;rulers&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>  \n        <span class=\"number\">100</span>  \n    <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// 显示空白字符  </span>\n    <span class=\"attr\">&quot;draw_white_space&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;all&quot;</span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// 保存时自动去除行末空白  </span>\n    <span class=\"attr\">&quot;trim_trailing_white_space_on_save&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;all&quot;</span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// 保存时自动增加文件末尾换行  </span>\n    <span class=\"attr\">&quot;ensure_newline_at_eof_on_save&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// 默认编码格式  </span>\n    <span class=\"attr\">&quot;default_encoding&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;UTF-8&quot;</span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// 不检查更新  </span>\n    <span class=\"attr\">&quot;update_check&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// 把光标的样式从闪烁变成淡入淡出  </span>\n    <span class=\"comment\">// 其余的选项还有&quot;smooth&quot;, &quot;phase&quot;, &quot;blink&quot;, &quot;wide&quot;， &quot;solid&quot;.  </span>\n    <span class=\"attr\">&quot;caret_style&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;phase&quot;</span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// 高亮当前行  </span>\n    <span class=\"attr\">&quot;highlight_line&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// 增加行间距  </span>\n    <span class=\"attr\">&quot;line_padding_bottom&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span>  \n    <span class=\"attr\">&quot;line_padding_top&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// 一直显示代码折叠箭头  </span>\n    <span class=\"attr\">&quot;fade_fold_buttons&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// 排除这些文件夹，搜索和侧边栏都不会显示  </span>\n    <span class=\"attr\">&quot;folder_exclude_patterns&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>  \n        <span class=\"string\">&quot;*.dSYM&quot;</span><span class=\"punctuation\">,</span>  \n    <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// 排除这些文件，搜索和侧边栏都不会显示  </span>\n    <span class=\"attr\">&quot;file_exclude_patterns&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>  \n        <span class=\"string\">&quot;.DS_Store&quot;</span><span class=\"punctuation\">,</span>  \n        <span class=\"string\">&quot;.clang-format&quot;</span><span class=\"punctuation\">,</span>  \n        <span class=\"string\">&quot;.clang-tidy&quot;</span><span class=\"punctuation\">,</span>  \n    <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span>  \n<span class=\"punctuation\">&#125;</span></code></pre>\n<h3 id=\"快捷键设置\"><a href=\"#快捷键设置\" class=\"headerlink\" title=\"快捷键设置\"></a>快捷键设置</h3><p>总是按 <code>Ctrl+B</code> 编译太麻烦？没关系，Sublime Text支持自定义快捷键。</p>\n<p>请前往“_首选项-快捷键设置_”找到<code>&#123; &quot;keys&quot;: [&quot;ctrl+b&quot;], &quot;command&quot;: &quot;build&quot; &#125;</code>这一行，把前面的”ctrl+b”尽情地改成自己习惯的按键。（为避免冲突，建议新建一个.sublime-keymap –User，将改后的代码复制进去单独保存）</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>常用操作：</strong></p>\n<ul>\n<li><p>寻找：ctrl+F</p>\n</li>\n<li><p>替换：ctrl+H</p>\n</li>\n<li><p>命令窗口：ctrl+shift+P</p>\n</li>\n<li><p>框选所有相同变量名：Alt+F3</p>\n</li>\n<li><p>注释：ctrl+&#x2F;</p>\n</li>\n<li><p>在多个代码标签中切换：ctrl+tab</p>\n</li>\n<li><p>分屏：Alt+shift+数字（数字为键盘上面那一行，表示为分多少块屏）</p>\n</li>\n<li><p>多行折叠：ctrl+J （毁别人代码的神器）</p>\n</li>\n<li><p>折叠代码：ctrl+shift+[</p>\n</li>\n<li><p>展开代码：ctrl+shift+]</p>\n</li>\n</ul></blockquote>\n<h2 id=\"优雅刷题必备插件-cppFastOlympicCoding\"><a href=\"#优雅刷题必备插件-cppFastOlympicCoding\" class=\"headerlink\" title=\"优雅刷题必备插件 cppFastOlympicCoding\"></a>优雅刷题必备插件 cppFastOlympicCoding</h2><p>使用刚刚安装中文包一样的方法安装 <code>FastOlympicCoding</code></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>CppFastOlympicCoding插件提供了以下功能。</p>\n<ul>\n<li><p><strong>测试管理器。</strong> 在测试管理器的帮助下，我们可以轻松添加、编辑和删除测试。</p>\n</li>\n<li><p><strong>StressTesting。</strong> StressTesting意味着我们可以测试我们的程序，找到它不工作的测试。</p>\n</li>\n<li><p><strong>CppLint。</strong> 我们可以在设置中编辑Cpplint的属性。</p>\n</li>\n<li><p><strong>调试器。</strong> 它为OSX提供调试功能。</p>\n</li>\n<li><p><strong>类的补全。</strong> 对于模板的替换，将字符写成类。</p>\n</li>\n<li><p><strong>竞赛设置。</strong> 它是专门为竞争性编程设计的。</p>\n</li>\n</ul></blockquote>\n<p>安装完成后，打开菜单 -&gt; 首选项 -&gt; Package-Setting -&gt; FastOlympicCoding</p>\n<p>将下面的配置覆盖左侧设置：</p>\n<pre><code class=\"highlight json\"><span class=\"punctuation\">&#123;</span>  \n    <span class=\"comment\">// enable/disable lint  </span>\n    <span class=\"attr\">&quot;lint_enabled&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span>  \n      \n    <span class=\"comment\">// lint style properties  </span>\n    <span class=\"attr\">&quot;lint_error_region_scope&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;invalid.illegal&quot;</span><span class=\"punctuation\">,</span>  \n    <span class=\"comment\">// &quot;lint_error_region_scope&quot;: &quot;variable.c++&quot;,  </span>\n    <span class=\"attr\">&quot;lint_warning_region_scope&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;constant&quot;</span><span class=\"punctuation\">,</span>  \n  \n    <span class=\"attr\">&quot;algorithms_base&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">null</span></span><span class=\"punctuation\">,</span>  \n  \n    <span class=\"comment\">// run settings:  </span>\n    <span class=\"comment\">// &quot;&#123;file&#125;&quot;: file name  </span>\n    <span class=\"comment\">// &quot;&#123;source_file&#125;&quot;: relative path to file  </span>\n    <span class=\"comment\">// &quot;&#123;source_file_dir&#125;&quot;: relative path to file directory  </span>\n    <span class=\"comment\">// &quot;&#123;file_name&#125;&quot;: file basename  </span>\n    <span class=\"attr\">&quot;run_settings&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>  \n        <span class=\"punctuation\">&#123;</span>  \n            <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;C++&quot;</span><span class=\"punctuation\">,</span>  \n            <span class=\"attr\">&quot;extensions&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;cpp&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span>  \n            <span class=\"attr\">&quot;compile_cmd&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;g++ \\&quot;&#123;source_file&#125;\\&quot; -std=c++11 -o \\&quot;&#123;source_file_dir&#125;/../bin/&#123;file_name&#125;.exe\\&quot;&quot;</span><span class=\"punctuation\">,</span>  \n            <span class=\"attr\">&quot;run_cmd&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;\\&quot;&#123;source_file_dir&#125;/../bin/&#123;file_name&#125;.exe\\&quot; &#123;args&#125; -debug&quot;</span><span class=\"punctuation\">,</span>  \n  \n            <span class=\"attr\">&quot;lint_compile_cmd&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;g++ -std=gnu++11 \\&quot;&#123;source_file&#125;\\&quot; -I \\&quot;&#123;source_file_dir&#125;\\&quot;&quot;</span>  \n        <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span>  \n  \n        <span class=\"punctuation\">&#123;</span>  \n            <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Python&quot;</span><span class=\"punctuation\">,</span>  \n            <span class=\"attr\">&quot;extensions&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;py&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span>  \n            <span class=\"attr\">&quot;compile_cmd&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">null</span></span><span class=\"punctuation\">,</span>  \n            <span class=\"attr\">&quot;run_cmd&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;python \\&quot;&#123;source_file&#125;\\&quot;&quot;</span>  \n        <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span>  \n          \n        <span class=\"punctuation\">&#123;</span>  \n            <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Java&quot;</span><span class=\"punctuation\">,</span>  \n            <span class=\"attr\">&quot;extensions&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;java&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span>  \n            <span class=\"attr\">&quot;compile_cmd&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;javac -J-Dfile.encoding=utf8 -d \\&quot;&#123;source_file_dir&#125;\\&quot; \\&quot;&#123;source_file&#125;\\&quot;&quot;</span><span class=\"punctuation\">,</span>  \n            <span class=\"attr\">&quot;run_cmd&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;java -classpath \\&quot;&#123;source_file_dir&#125;\\&quot; \\&quot;&#123;file_name&#125;\\&quot;&quot;</span>  \n        <span class=\"punctuation\">&#125;</span>  \n    <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span>  \n  \n    <span class=\"comment\">// time limit for stress  </span>\n    <span class=\"attr\">&quot;stress_time_limit_seconds&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span>  \n  \n    <span class=\"comment\">// enable/disable complete  </span>\n    <span class=\"attr\">&quot;cpp_complete_enabled&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span>  \n  \n    <span class=\"comment\">// class completion settings  </span>\n    <span class=\"attr\">&quot;cpp_complete_settings&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>  \n        <span class=\"attr\">&quot;classes&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>  \n            <span class=\"attr\">&quot;int&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>  \n                <span class=\"attr\">&quot;template_size&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span>  \n            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span>  \n  \n            <span class=\"attr\">&quot;char&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>  \n                <span class=\"attr\">&quot;template_size&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span>  \n            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span>  \n  \n            <span class=\"attr\">&quot;string&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>  \n                <span class=\"attr\">&quot;template_size&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span>  \n            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span>  \n  \n            <span class=\"attr\">&quot;pair&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>  \n                <span class=\"attr\">&quot;template_size&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span>  \n            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span>  \n  \n            <span class=\"attr\">&quot;vector&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>  \n                <span class=\"attr\">&quot;template_size&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1</span>  \n            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span>  \n  \n            <span class=\"attr\">&quot;bool&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>  \n                <span class=\"attr\">&quot;template_size&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span>  \n            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span>  \n  \n            <span class=\"attr\">&quot;ll&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>  \n                <span class=\"attr\">&quot;template_size&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span>  \n            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span>  \n  \n            <span class=\"attr\">&quot;double&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>  \n                <span class=\"attr\">&quot;template_size&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span>  \n            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span>  \n  \n            <span class=\"attr\">&quot;set&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>  \n                <span class=\"attr\">&quot;template_size&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span>  \n                <span class=\"attr\">&quot;bind&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;S&quot;</span>  \n            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span>  \n  \n            <span class=\"attr\">&quot;map&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>  \n                <span class=\"attr\">&quot;template_size&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span>  \n            <span class=\"punctuation\">&#125;</span>  \n        <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span>  \n  \n        <span class=\"attr\">&quot;dont_expand&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>  \n            <span class=\"string\">&quot;pii&quot;</span>  \n        <span class=\"punctuation\">]</span>  \n    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span>  \n  \n    <span class=\"comment\">// closing sidebar when executing  </span>\n    <span class=\"attr\">&quot;close_sidebar&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span>   \n  \n    <span class=\"comment\">// tests files dir  </span>\n    <span class=\"attr\">&quot;tests_relative_dir&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span>  \n<span class=\"punctuation\">&#125;</span></code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>快捷键：</strong></p>\n<p>macOS系统下：</p>\n<ul>\n<li><p>编译并运行：ctrl+b</p>\n</li>\n<li><p>创建新的测试：ctrl+enter</p>\n</li>\n<li><p>终止进程：ctrl+c</p>\n</li>\n<li><p>使用调试器运行：ctrl+shift+b</p>\n</li>\n<li><p>删除测试：ctrl+d</p>\n</li>\n<li><p>交换测试位置：ctrl+super+up&#x2F;ctrl+super+down</p>\n</li>\n<li><p>关闭&#x2F;打开右侧面板：cmd+k, cmd+p</p>\n</li>\n</ul>\n<p>Linux和Windows系统下：</p>\n<ul>\n<li><p>编译并运行：ctrl+alt+b</p>\n</li>\n<li><p>创建新的测试：ctrl+enter</p>\n</li>\n<li><p>终止进程：ctrl+x</p>\n</li>\n<li><p>使用调试器运行：ctrl+shift+b</p>\n</li>\n<li><p>删除测试：ctrl+d</p>\n</li>\n<li><p>交换测试位置：ctrl+shift+up&#x2F;ctrl+shift+down</p>\n</li>\n<li><p>关闭&#x2F;打开右侧面板：ctrl+k, ctrl+p</p>\n</li>\n</ul></blockquote>\n<h2 id=\"Sublime-Text-插件推荐\"><a href=\"#Sublime-Text-插件推荐\" class=\"headerlink\" title=\"Sublime Text 插件推荐\"></a>Sublime Text 插件推荐</h2><h4 id=\"SideBarEnhancements\"><a href=\"#SideBarEnhancements\" class=\"headerlink\" title=\"SideBarEnhancements\"></a>SideBarEnhancements</h4><p>SideBarEnhancements是sublime的加强侧边栏插件，在View—side bar菜单中可以控制显示或隐藏侧边栏（下图），我们可以将一个项目文件夹拖动到侧边栏中，就可以很方便地对目录下的文件进行可视化管理。</p>\n<h4 id=\"Bracket-Highlighter\"><a href=\"#Bracket-Highlighter\" class=\"headerlink\" title=\"Bracket Highlighter\"></a>Bracket Highlighter</h4><p>括号匹配，可匹配[], (), {}, “”, ”,，高亮标记，便于查看起始和结束标记</p>\n<h4 id=\"All-Autocomplete\"><a href=\"#All-Autocomplete\" class=\"headerlink\" title=\"All Autocomplete\"></a>All Autocomplete</h4><p>自动补全</p>\n<h4 id=\"Status-Bar-Time\"><a href=\"#Status-Bar-Time\" class=\"headerlink\" title=\"Status Bar Time\"></a>Status Bar Time</h4><p>在左下角显示时间</p>\n<h4 id=\"SublimeAStyleFormatter\"><a href=\"#SublimeAStyleFormatter\" class=\"headerlink\" title=\"SublimeAStyleFormatter\"></a>SublimeAStyleFormatter</h4><p>代码格式化，快捷键 <code>ctrl + alt + f</code></p>\n<h4 id=\"个性化插件——插入时间\"><a href=\"#个性化插件——插入时间\" class=\"headerlink\" title=\"个性化插件——插入时间\"></a>个性化插件——插入时间</h4><p>在代码中快速插入时间，实现按下 <code>f1</code> 可插入时间</p>\n<p>工具 -&gt; 插件开发 -&gt; 新建插件，将下面的代码复制过去。</p>\n<pre><code class=\"highlight python\"><span class=\"keyword\">import</span> datetime  \n<span class=\"keyword\">import</span> sublime_plugin  \n<span class=\"keyword\">class</span> <span class=\"title class_\">AddCurrentTimeCommand</span>(sublime_plugin.TextCommand):  \n    <span class=\"keyword\">def</span> <span class=\"title function_\">run</span>(<span class=\"params\">self, edit</span>):  \n        self.view.run_command(<span class=\"string\">&quot;insert_snippet&quot;</span>,   \n            &#123;  \n                <span class=\"string\">&quot;contents&quot;</span>: <span class=\"string\">&quot;%s&quot;</span> % datetime.datetime.now().strftime(<span class=\"string\">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)   \n            &#125;  \n        )</code></pre>\n<p>需要配置快捷键：首选项 -&gt; 快捷键设置</p>\n<pre><code class=\"highlight json\"><span class=\"punctuation\">[</span>  \n    <span class=\"punctuation\">&#123;</span>  \n        <span class=\"attr\">&quot;command&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;add_current_time&quot;</span><span class=\"punctuation\">,</span>  \n        <span class=\"attr\">&quot;keys&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>  \n            <span class=\"string\">&quot;f1&quot;</span>  \n        <span class=\"punctuation\">]</span>  \n    <span class=\"punctuation\">&#125;</span>  \n<span class=\"punctuation\">]</span></code></pre>\n\n<h2 id=\"代码模板\"><a href=\"#代码模板\" class=\"headerlink\" title=\"代码模板\"></a>代码模板</h2><p>工具 -&gt; 插件开发 -&gt; 新建代码片段</p>\n<ol>\n<li><p>普通模板</p>\n<pre><code class=\"highlight html\"><span class=\"tag\">&lt;<span class=\"name\">snippet</span>&gt;</span>  \n    <span class=\"tag\">&lt;<span class=\"name\">content</span>&gt;</span>&lt;![CDATA[  \n/**  \n * @Author   \n * @DateTime   \n */  \n#include &lt;bits/stdc++.h&gt;  \nusing namespace std;  \n//#define int long long  \n\ntypedef long long ll;  \ntypedef pair&lt;int, int&gt; PII;  \n#define endl &quot;\\n&quot;  \n  \nconst int N = 1000005; // 1e6 + 5  \n  \nsigned main () &#123;  \n    std::ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);  \n  \n&#125;  \n  \n]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">content</span>&gt;</span>  \n    <span class=\"comment\">&lt;!-- 唤醒词 --&gt;</span>  \n    <span class=\"tag\">&lt;<span class=\"name\">tabTrigger</span>&gt;</span>acm<span class=\"tag\">&lt;/<span class=\"name\">tabTrigger</span>&gt;</span>  \n    <span class=\"comment\">&lt;!-- 描述信息，可选 --&gt;</span>  \n    <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>C/C++ 基础头文件<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span>  \n    <span class=\"comment\">&lt;!-- 对什么文件生效，下为C/C++ --&gt;</span>  \n    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>source.c, source.c++<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span>  \n<span class=\"tag\">&lt;/<span class=\"name\">snippet</span>&gt;</span></code></pre>\n</li>\n<li><p>CodeForces 模板</p>\n</li>\n</ol>\n<pre><code class=\"highlight html\"><span class=\"tag\">&lt;<span class=\"name\">snippet</span>&gt;</span>  \n\t<span class=\"tag\">&lt;<span class=\"name\">content</span>&gt;</span>&lt;![CDATA[  \n/**  \n * @Author   \n * @DateTime   \n */  \n#include &lt;bits/stdc++.h&gt;  \nusing namespace std;  \ntypedef long long ll;  \ntypedef pair&lt;int, int&gt; PII;  \n#define endl &quot;\\n&quot;  \n  \n//#define int long long  \nconst int N = 1000005; // 1e6 + 5  \n  \nvoid solve() &#123;  \n  \n&#125;  \nsigned main () &#123;  \n\tstd::ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);  \n\tint t; cin&gt;&gt; t; while(t --)  \n\t\tsolve();  \n&#125;  \n  \n]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">content</span>&gt;</span>  \n\t<span class=\"comment\">&lt;!-- Optional: Set a tabTrigger to define how to trigger the snippet --&gt;</span>  \n\t<span class=\"tag\">&lt;<span class=\"name\">tabTrigger</span>&gt;</span>cf<span class=\"tag\">&lt;/<span class=\"name\">tabTrigger</span>&gt;</span>  \n\t<span class=\"comment\">&lt;!-- 描述信息，可选 --&gt;</span>  \n   \t<span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>针对codeforces 定制的 C/C++ 基础头文件<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span>  \n\t<span class=\"comment\">&lt;!-- Optional: Set a scope to limit where the snippet will trigger --&gt;</span>  \n\t<span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>source.c, source.c++<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span>  \n<span class=\"tag\">&lt;/<span class=\"name\">snippet</span>&gt;</span></code></pre>\n<p>3.普通模板</p>\n<pre><code class=\"highlight html\"><span class=\"tag\">&lt;<span class=\"name\">snippet</span>&gt;</span>  \n\t<span class=\"tag\">&lt;<span class=\"name\">content</span>&gt;</span>&lt;![CDATA[  \n/**  \n * @Author   \n * @DateTime   \n */  \n//#include&lt;bits/stdc++.h&gt;  \n#include &lt;algorithm&gt;  \n#include &lt;bitset&gt;  \n#include &lt;complex&gt;  \n#include &lt;deque&gt;  \n#include &lt;exception&gt;  \n#include &lt;fstream&gt;  \n#include &lt;functional&gt;  \n#include &lt;iomanip&gt;  \n#include &lt;ios&gt;  \n#include &lt;iosfwd&gt;  \n#include &lt;iostream&gt;  \n#include &lt;istream&gt;  \n#include &lt;iterator&gt;  \n#include &lt;limits&gt;  \n#include &lt;list&gt;  \n#include &lt;locale&gt;  \n#include &lt;map&gt;  \n#include &lt;memory&gt;  \n#include &lt;new&gt;  \n#include &lt;numeric&gt;  \n#include &lt;ostream&gt;  \n#include &lt;queue&gt;  \n#include &lt;set&gt;  \n#include &lt;sstream&gt;  \n#include &lt;stack&gt;  \n#include &lt;stdexcept&gt;  \n#include &lt;streambuf&gt;  \n#include &lt;string&gt;  \n#include &lt;typeinfo&gt;  \n#include &lt;utility&gt;  \n#include &lt;valarray&gt;  \n#include &lt;vector&gt;  \n#include &lt;unordered_map&gt;  \n#include &lt;unordered_set&gt;  \n#include &lt;random&gt;  \n#include &lt;tuple&gt;  \n//#if __cplusplus &gt;= 201103L  \n// #include &lt;array&gt;  \n// #include &lt;atomic&gt;  \n// #include &lt;chrono&gt;  \n// #include &lt;condition_variable&gt;  \n// #include &lt;forward_list&gt;  \n// #include &lt;future&gt;  \n// #include &lt;initializer_list&gt;  \n// #include &lt;mutex&gt;  \n// #include &lt;ratio&gt;  \n// #include &lt;regex&gt;  \n// #include &lt;scoped_allocator&gt;  \n// #include &lt;system_error&gt;  \n// #include &lt;thread&gt;  \n// #include &lt;typeindex&gt;  \n// #include &lt;type_traits&gt;  \n  \nusing namespace std;  \nusing ll = long long;  \nusing ld = long double;  \nusing uint = unsigned int;  \nusing ull = unsigned long long;  \nusing PII = pair&lt;int, int&gt;;  \nusing PLI = pair&lt;ll, int&gt;;  \nusing PLL = pair&lt;ll, ll&gt;;  \n  \n#define mem(a,b) memset(a,b,sizeof a)  \n#define endl &quot;\\n&quot;  \n#define lowbit(a) ((a)&amp;-(a))  \n#define random(a,b) ((a)+rand()%((b)-(a)+1))  \n#define clear(); std::ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);  \n#define debug(x) cout &lt;&lt; #x &lt;&lt; &#x27; &#x27; &lt;&lt; &#x27;=&#x27; &lt;&lt; &#x27; &#x27; &lt;&lt; (x) &lt;&lt; endl  \n#define abs(a) ((a) &gt;= 0 ? (a) : -(a))  \n#define sz(x) ((int)(x).size())  \n#define all(x) (x).begin(), (x).end()  \n#define mem(a, b) memset(a, b, sizeof(a))  \n#define max(a, b) ((a) &gt; (b) ? (a) : (b))  \n#define min(a, b) ((a) &lt; (b) ? (a) : (b))  \n#define fr(i, a, n) for (int i = a; i &lt;= n; ++i)  \n#define rf(i, n, a) for (int i = n; i &gt;= a; --i)  \n#define pb push_back  \n#define mp make_pair  \n#define fi first  \n#define se second  \n  \n#define int long long  \n  \nconst double eps = 1e-7;  \nconst double PI = acos( -1 );  \nconst int INF = 0x3f3f3f3f;  \nconst int MOD = 1e9 + 7;  \nconst int N = 2e6+10;  \n  \nsigned main()&#123;  \n\t//clear();  \n\t  \n&#125;  \n  \n]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">content</span>&gt;</span>  \n\t<span class=\"comment\">&lt;!-- Optional: Set a tabTrigger to define how to trigger the snippet --&gt;</span>  \n\t<span class=\"tag\">&lt;<span class=\"name\">tabTrigger</span>&gt;</span>wam<span class=\"tag\">&lt;/<span class=\"name\">tabTrigger</span>&gt;</span>  \n\t<span class=\"comment\">&lt;!-- 描述信息，可选 --&gt;</span>  \n   \t<span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>C/C++ 头文件 附带宏定义<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span>  \n\t<span class=\"comment\">&lt;!-- Optional: Set a scope to limit where the snippet will trigger --&gt;</span>  \n\t<span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>source.c, source.c++<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span>  \n<span class=\"tag\">&lt;/<span class=\"name\">snippet</span>&gt;</span></code></pre>\n","feature":true,"text":"LastEditTime: 2023-07-08 12:31:02 基本都是抄来改的，就当图个备份。(bushi) 0x01下载 Sublime TextSub...","permalink":"/post/如何优雅地用-Sublime-Text-刷题（C-C","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"算法","slug":"算法","count":6,"path":"api/categories/算法.json"}],"tags":[{"name":"工具","slug":"工具","count":2,"path":"api/tags/工具.json"},{"name":"Cpp","slug":"Cpp","count":4,"path":"api/tags/Cpp.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01%E4%B8%8B%E8%BD%BD-Sublime-Text\"><span class=\"toc-text\">0x01下载 Sublime Text</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02-%E5%AE%89%E8%A3%85MinGW%E7%BC%96%E8%AF%91%E5%99%A8\"><span class=\"toc-text\">0x02 安装MinGW编译器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03-%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">0x03 设置环境变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A3%80%E9%AA%8C%E6%98%AF%E5%90%A6%E8%AE%BE%E7%BD%AE%E6%88%90%E5%8A%9F\"><span class=\"toc-text\">检验是否设置成功</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x04-%E9%85%8D%E7%BD%AE-Sublime-Text\"><span class=\"toc-text\">0x04 配置 Sublime Text</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B1%89%E5%8C%96%E5%8F%8A%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">汉化及插件安装方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">个性化配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#sublime%E5%81%8F%E5%A5%BD%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">sublime偏好设置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BF%AB%E6%8D%B7%E9%94%AE%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">快捷键设置</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BC%98%E9%9B%85%E5%88%B7%E9%A2%98%E5%BF%85%E5%A4%87%E6%8F%92%E4%BB%B6-cppFastOlympicCoding\"><span class=\"toc-text\">优雅刷题必备插件 cppFastOlympicCoding</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Sublime-Text-%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90\"><span class=\"toc-text\">Sublime Text 插件推荐</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#SideBarEnhancements\"><span class=\"toc-text\">SideBarEnhancements</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Bracket-Highlighter\"><span class=\"toc-text\">Bracket Highlighter</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#All-Autocomplete\"><span class=\"toc-text\">All Autocomplete</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Status-Bar-Time\"><span class=\"toc-text\">Status Bar Time</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#SublimeAStyleFormatter\"><span class=\"toc-text\">SublimeAStyleFormatter</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%AA%E6%80%A7%E5%8C%96%E6%8F%92%E4%BB%B6%E2%80%94%E2%80%94%E6%8F%92%E5%85%A5%E6%97%B6%E9%97%B4\"><span class=\"toc-text\">个性化插件——插入时间</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF\"><span class=\"toc-text\">代码模板</span></a></li></ol>","author":{"name":"KAZEmae","slug":"blog-author","avatar":"https://cdn.luogu.com.cn/upload/image_hosting/ta8dbhtt.png","link":"/","description":"","socials":{"github":"https://github.com/KazeMae","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/su-mu-78-85-44","csdn":"https://blog.csdn.net/weixin_73404823","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/248618134"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Remaining_Lotus"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"对拍器","uid":"afbdc662f7a3047fa9981dc983cb9e4b","slug":"对拍器","date":"2024-01-08T13:06:00.000Z","updated":"2024-01-08T14:42:04.000Z","comments":true,"path":"api/articles/对拍器.json","keywords":null,"cover":"https://cdn.luogu.com.cn/upload/image_hosting/8qdyho6c.png","text":"对拍是什么对拍，是一个比较实用的工具。它能够非常方便地对于两个程序的输出文件进行比较，可以帮助我们实现一些自动化的比较输出结果的问题。 众所周知，几乎每一道编程...","permalink":"/post/对拍器","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"算法","slug":"算法","count":6,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"},{"name":"工具","slug":"工具","count":2,"path":"api/tags/工具.json"},{"name":"Cpp","slug":"Cpp","count":4,"path":"api/tags/Cpp.json"}],"author":{"name":"KAZEmae","slug":"blog-author","avatar":"https://cdn.luogu.com.cn/upload/image_hosting/ta8dbhtt.png","link":"/","description":"","socials":{"github":"https://github.com/KazeMae","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/su-mu-78-85-44","csdn":"https://blog.csdn.net/weixin_73404823","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/248618134"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Remaining_Lotus"}}}},"feature":true},"next_post":{"title":"Hello World","uid":"b9663f58f18133b35bfe243f3e916a80","slug":"hello-world","date":"2024-01-08T14:42:00.000Z","updated":"2024-01-08T14:42:00.000Z","comments":true,"path":"api/articles/hello-world.json","keywords":null,"cover":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info...","permalink":"/post/hello-world","photos":[],"count_time":{"symbolsCount":440,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"KAZEmae","slug":"blog-author","avatar":"https://cdn.luogu.com.cn/upload/image_hosting/ta8dbhtt.png","link":"/","description":"","socials":{"github":"https://github.com/KazeMae","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/su-mu-78-85-44","csdn":"https://blog.csdn.net/weixin_73404823","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/248618134"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Remaining_Lotus"}}}},"feature":false}}