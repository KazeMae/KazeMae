{"name":"Cpp","slug":"Cpp","count":4,"postlist":[{"title":"并查集","uid":"c18469ab20e7b093d36b4a61728d07eb","slug":"并查集","date":"2024-01-08T13:06:04.000Z","updated":"2024-01-08T14:42:06.000Z","comments":true,"path":"api/articles/并查集.json","keywords":null,"cover":"https://cdn.luogu.com.cn/upload/image_hosting/w6ueye84.png","text":"定义并查集是一种树型的数据结构，用于处理一些不相交集合的合并及查询问题（即所谓的并、查）。比如说，我们可以用并查集来判断一个森林中有几棵树、某个节点是否属于某棵...","permalink":"/post/并查集","photos":[],"count_time":{"symbolsCount":719,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":7,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":6,"path":"api/tags/算法.json"},{"name":"Cpp","slug":"Cpp","count":4,"path":"api/tags/Cpp.json"}],"author":{"name":"KAZEmae","slug":"blog-author","avatar":"https://cdn.luogu.com.cn/upload/image_hosting/ta8dbhtt.png","link":"/","description":"","socials":{"github":"https://github.com/KazeMae","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/su-mu-78-85-44","csdn":"https://blog.csdn.net/weixin_73404823","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/248618134"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Remaining_Lotus"}}}},"feature":false},{"title":"对拍器","uid":"afbdc662f7a3047fa9981dc983cb9e4b","slug":"对拍器","date":"2024-01-08T13:06:00.000Z","updated":"2024-01-08T14:42:04.000Z","comments":true,"path":"api/articles/对拍器.json","keywords":null,"cover":"https://cdn.luogu.com.cn/upload/image_hosting/8qdyho6c.png","text":"对拍是什么对拍，是一个比较实用的工具。它能够非常方便地对于两个程序的输出文件进行比较，可以帮助我们实现一些自动化的比较输出结果的问题。 众所周知，几乎每一道编程...","permalink":"/post/对拍器","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"算法","slug":"算法","count":7,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":6,"path":"api/tags/算法.json"},{"name":"工具","slug":"工具","count":2,"path":"api/tags/工具.json"},{"name":"Cpp","slug":"Cpp","count":4,"path":"api/tags/Cpp.json"}],"author":{"name":"KAZEmae","slug":"blog-author","avatar":"https://cdn.luogu.com.cn/upload/image_hosting/ta8dbhtt.png","link":"/","description":"","socials":{"github":"https://github.com/KazeMae","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/su-mu-78-85-44","csdn":"https://blog.csdn.net/weixin_73404823","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/248618134"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Remaining_Lotus"}}}},"feature":true},{"title":"如何优雅地用 Sublime Text 刷题（C/C++）","uid":"0fe35e38e770f16f9b8cdba4cf1ece54","slug":"如何优雅地用-Sublime-Text-刷题（C-C","date":"2024-01-08T13:04:24.000Z","updated":"2024-01-22T06:47:09.000Z","comments":true,"path":"api/articles/如何优雅地用-Sublime-Text-刷题（C-C.json","keywords":null,"cover":"https://cdn.luogu.com.cn/upload/image_hosting/eqbjc9m9.png","text":"LastEditTime: 2023-07-08 12:31:02 基本都是抄来改的，就当图个备份。(bushi) 0x01下载 Sublime TextSub...","permalink":"/post/如何优雅地用-Sublime-Text-刷题（C-C","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"算法","slug":"算法","count":7,"path":"api/categories/算法.json"}],"tags":[{"name":"工具","slug":"工具","count":2,"path":"api/tags/工具.json"},{"name":"Cpp","slug":"Cpp","count":4,"path":"api/tags/Cpp.json"}],"author":{"name":"KAZEmae","slug":"blog-author","avatar":"https://cdn.luogu.com.cn/upload/image_hosting/ta8dbhtt.png","link":"/","description":"","socials":{"github":"https://github.com/KazeMae","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/su-mu-78-85-44","csdn":"https://blog.csdn.net/weixin_73404823","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/248618134"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Remaining_Lotus"}}}},"feature":true},{"title":"01背包","uid":"d26940bc311bdaabb8d1c2107d93235d","slug":"01背包","date":"2024-01-08T13:04:19.000Z","updated":"2024-01-08T14:42:02.000Z","comments":true,"path":"api/articles/01背包.json","keywords":null,"cover":"https://cdn.luogu.com.cn/upload/image_hosting/m31u4e22.png","text":"01背包每件物品只能装一次 朴素二维动态规划 $dp[i][j]：$$i$表示当前对第$i$个物品判断，$j$表示当前背包最大容量为$j$，$dp[i][j]$...","permalink":"/post/01背包","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":7,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":6,"path":"api/tags/算法.json"},{"name":"Cpp","slug":"Cpp","count":4,"path":"api/tags/Cpp.json"}],"author":{"name":"KAZEmae","slug":"blog-author","avatar":"https://cdn.luogu.com.cn/upload/image_hosting/ta8dbhtt.png","link":"/","description":"","socials":{"github":"https://github.com/KazeMae","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/su-mu-78-85-44","csdn":"https://blog.csdn.net/weixin_73404823","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/248618134"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Remaining_Lotus"}}}},"feature":false}]}